# Реализовать скрипт, в котором должна быть предусмотрена
# функция расчета заработной платы сотрудника.
# В расчете необходимо использовать формулу: (выработка в часах * ставка в час) + премия

# from sys import argv
#
# script_name, salary_per_hour, work_time, bonus = argv
#
# print("Имя скрипта: ", script_name)
# print("Ставка в часах: ", salary_per_hour)
# print("Выработка в часах ", work_time)
# print("какой бонус у сотрудника: ", bonus)
#
# print(f"Ваш сотрудник заработал за меясяц {int(salary_per_hour) * int(work_time) + int(bonus)}")

# 2. Представлен список чисел. Необходимо вывести элементы исходного списка,
# значения которых больше предыдущего элемента.
# Подсказка: элементы, удовлетворяющие условию, оформить в виде списка.
# Для формирования списка использовать генератор.
# Пример исходного списка: [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55].
# Результат: [12, 44, 4, 10, 78, 123].
#
# list_1 = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
# list_2 = [num for i, num in enumerate(list_1) if i > 0 and list_1[i] > list_1[i - 1]]
# print(list_2)

# 3  Для чисел в пределах от 20 до 240 найти числа, кратные 20 или 21.
# Необходимо решить задание в одну строку.
# подсказка: использовать функцию range() и генератор.
# list_3 = [num for num in range(20, 240) if num % 20 == 0 and num % 21 == 0 ]
# print(list_3)


# for num in range(20, 240):
#     if num % 20 == 0 and num % 21 == 0:
#         print(num)

# 4  Представлен список чисел. Определить элементы списка, не имеющие повторений.
# Сформировать итоговый массив чисел, соответствующих требованию.
# Элементы вывести в порядке их следования в исходном списке.
# Для выполнения задания обязательно использовать генератор.
# Пример исходного списка: [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11].
# Результат: [23, 1, 3, 10, 4, 11]

# my_list = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
# new_list = [el for el in my_list if my_list.count(el) == 1]
# print(new_list)

# 5 Реализовать формирование списка, используя функцию range()
# и возможности генератора.
# В список должны войти четные числа от 100 до 1000 (включая границы).
# Необходимо получить результат вычисления произведения всех элементов списка.
# Подсказка: использовать функцию reduce().

# from functools import reduce
# def calc(el_1, el_2):
#     res = el_1 * el_2
#     return (res)
# new_list = [el for el in range(100,1001)]
#
# print(reduce(calc,new_list))


# 6.1  Реализовать два небольших скрипта:
# а) итератор, генерирующий целые числа, начиная с указанного,

# from itertools import count
# s = int(input("Starting number: "))
# f = int(input("Finishing number: "))
# for i in count(s):
#     if i == f+1:
#         break
#     else:
#         print(i)


# 6.2 итератор, повторяющий элементы некоторого списка, определенного заранее.
# Подсказка: использовать функцию count() и cycle() модуля itertools.
# Обратите внимание, что создаваемый цикл не должен быть бесконечным.
# Необходимо предусмотреть условие его завершения.
# Например, в первом задании выводим целые числа, начиная с 3, а при достижении числа 10 завершаем цикл.
# Во втором также необходимо предусмотреть условие,
# при котором повторение элементов списка будет прекращено.

# from itertools import cycle
#
# my_list=[int(i) for i in input("Введите элементы списка через пробел:").split()]
#
# c = int(input("сколько раз повторить?: "))
# for i, j in enumerate(cycle(my_list)):
#     print(j)
#     if i > c:
#         break

# 7. Реализовать генератор с помощью функции с ключевым словом yield,
# создающим очередное значение. При вызове функции должен создаваться объект-генератор.
# Функция должна вызываться следующим образом: for el in fact(n).
# Функция отвечает за получение факториала числа,
# а в цикле необходимо выводить только первые n чисел, начиная с 1! и до n!.
# Подсказка: факториал числа n — произведение чисел от 1 до n.
# Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.
#
# def fact(n):
#     x = 1
#     for i in range(1, n + 1):
#         x *= 1
#         yield x
# 
# 
# n = int(input("Факториал какого числа Вы хотели бы узнать?: "))
# for el in fact(n):
#     print(el)

